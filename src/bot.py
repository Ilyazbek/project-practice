import os
import random

import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

BOT_TOKEN = '8072967467:AAGtvZCul-Vdy-hQCzl9eejTZBJmoz1fJI4'
bot = telebot.TeleBot(BOT_TOKEN)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
with open("anekdot.txt", "r", encoding="utf-8") as file:
    aneki = file.readlines()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
user_scores = {}
user_cards = {}
dealer_cards = {}
game_in_progress = {}

# –ö–æ–ª–æ–¥–∞ –∫–∞—Ä—Ç
card_deck = [
    '2‚ô†', '3‚ô†', '4‚ô†', '5‚ô†', '6‚ô†', '7‚ô†', '8‚ô†', '9‚ô†', '10‚ô†', '–í‚ô†', '–î‚ô†', '–ö‚ô†', '–¢‚ô†',
    '2‚ô•', '3‚ô•', '4‚ô•', '5‚ô•', '6‚ô•', '7‚ô•', '8‚ô•', '9‚ô•', '10‚ô•', '–í‚ô•', '–î‚ô•', '–ö‚ô•', '–¢‚ô•',
    '2‚ô¶', '3‚ô¶', '4‚ô¶', '5‚ô¶', '6‚ô¶', '7‚ô¶', '8‚ô¶', '9‚ô¶', '10‚ô¶', '–í‚ô¶', '–î‚ô¶', '–ö‚ô¶', '–¢‚ô¶',
    '2‚ô£', '3‚ô£', '4‚ô£', '5‚ô£', '6‚ô£', '7‚ô£', '8‚ô£', '9‚ô£', '10‚ô£', '–í‚ô£', '–î‚ô£', '–ö‚ô£', '–¢‚ô£'
]

card_values = {
    '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10,
    '–í': 2, '–î': 3, '–ö': 4, '–¢': 11
}


def calculate_score(cards):
    score = 0
    for card in cards:
        value = card[:-1]  # –£–±–∏—Ä–∞–µ–º –º–∞—Å—Ç—å
        score += card_values[value]
    return score


def deal_card():
    return random.choice(card_deck)


def start_game(message):
    chat_id = message.chat.id
    user_cards[chat_id] = [deal_card(), deal_card()]
    dealer_cards[chat_id] = [deal_card(), deal_card()]
    game_in_progress[chat_id] = True

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–í–∑—è—Ç—å –∫–∞—Ä—Ç—É"), KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è"))

    user_score = calculate_score(user_cards[chat_id])
    dealer_score = calculate_score([dealer_cards[chat_id][0]])  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∫–∞—Ä—Ç—É –¥–∏–ª–µ—Ä–∞

    response = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {', '.join(user_cards[chat_id])} ({user_score} –æ—á–∫–æ–≤)\n"
    response += f"–ö–∞—Ä—Ç–∞ –¥–∏–ª–µ—Ä–∞: {dealer_cards[chat_id][0]} ({dealer_score} –æ—á–∫–æ–≤)"

    bot.send_message(chat_id, response, reply_markup=markup)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 21 –æ—á–∫–æ —Å—Ä–∞–∑—É
    if user_score == 21:
        end_game(message, "blackjack")


def hit(message):
    chat_id = message.chat.id
    if not game_in_progress.get(chat_id, False):
        bot.send_message(chat_id, "–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞. –ù–∞–∂–º–∏—Ç–µ /start_game —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
        return

    user_cards[chat_id].append(deal_card())
    user_score = calculate_score(user_cards[chat_id])

    response = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {', '.join(user_cards[chat_id])} ({user_score} –æ—á–∫–æ–≤)\n"
    response += f"–ö–∞—Ä—Ç–∞ –¥–∏–ª–µ—Ä–∞: {dealer_cards[chat_id][0]}"

    if user_score > 21:
        end_game(message, "lose")
    elif user_score == 21:
        end_game(message, "win")
    else:
        bot.send_message(chat_id, response)


def stand(message):
    chat_id = message.chat.id
    if not game_in_progress.get(chat_id, False):
        bot.send_message(chat_id, "–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞. –ù–∞–∂–º–∏—Ç–µ /start_game —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
        return

    # –î–∏–ª–µ—Ä –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—ã –ø–æ–∫–∞ —É –Ω–µ–≥–æ –º–µ–Ω—å—à–µ 17 –æ—á–∫–æ–≤
    dealer_score = calculate_score(dealer_cards[chat_id])
    while dealer_score < 17:
        dealer_cards[chat_id].append(deal_card())
        dealer_score = calculate_score(dealer_cards[chat_id])

    user_score = calculate_score(user_cards[chat_id])

    response = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {', '.join(user_cards[chat_id])} ({user_score} –æ—á–∫–æ–≤)\n"
    response += f"–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {', '.join(dealer_cards[chat_id])} ({dealer_score} –æ—á–∫–æ–≤)\n"

    if dealer_score > 21 or user_score > dealer_score:
        response += "\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ"
    elif user_score == dealer_score:
        response += "\n–ù–∏—á—å—è! ü§ù"
    else:
        response += "\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. üò¢"

    bot.send_message(chat_id, response, reply_markup=ReplyKeyboardRemove())
    game_in_progress[chat_id] = False


def end_game(message, result):
    chat_id = message.chat.id
    user_score = calculate_score(user_cards[chat_id])
    dealer_score = calculate_score(dealer_cards[chat_id])

    response = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {', '.join(user_cards[chat_id])} ({user_score} –æ—á–∫–æ–≤)\n"
    response += f"–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {', '.join(dealer_cards[chat_id])} ({dealer_score} –æ—á–∫–æ–≤)\n"

    if result == "blackjack":
        response += "\nBlackjack! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ"
    elif result == "win":
        response += "\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ"
    elif result == "lose":
        response += "\n–ü–µ—Ä–µ–±–æ—Ä! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. üò¢"

    bot.send_message(chat_id, response, reply_markup=ReplyKeyboardRemove())
    game_in_progress[chat_id] = False


@bot.message_handler(commands=['start'])
def start(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = KeyboardButton("–ò–≥—Ä–∞")
    button2 = KeyboardButton("–ê–Ω–µ–∫–¥–æ—Ç")
    markup.add(button1, button2)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ê–Ω–µ–∫–¥–æ—Ç")
def handle_joke(message):
    i = random.randint(0, len(aneki) - 1)
    bot.send_message(message.chat.id, str(aneki[i]).replace("/n", "\n"))


@bot.message_handler(func=lambda message: message.text == "–ò–≥—Ä–∞")
def handle_game(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"), KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É")
def handle_start_game(message):
    start_game(message)


@bot.message_handler(func=lambda message: message.text == "–ü—Ä–∞–≤–∏–ª–∞")
def handle_rules(message):
    rules = """
    üéÆ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ 21 –æ—á–∫–æ:

    1. –¶–µ–ª—å –∏–≥—Ä—ã - –Ω–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –æ—á–∫–æ–≤, —á–µ–º –¥–∏–ª–µ—Ä, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 21.
    2. –ö–∞—Ä—Ç—ã –æ—Ç 2 –¥–æ 10 –¥–∞—é—Ç –æ—á–∫–∏ –ø–æ –Ω–æ–º–∏–Ω–∞–ª—É.
    3. –í–∞–ª–µ—Ç, –î–∞–º–∞, –ö–æ—Ä–æ–ª—å –¥–∞—é—Ç 2, 3 –∏ 4 –æ—á–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
    4. –¢—É–∑ –¥–∞–µ—Ç 11 –æ—á–∫–æ–≤ (–∏–ª–∏ 1, –µ—Å–ª–∏ –ø–µ—Ä–µ–±–æ—Ä).
    5. –í—ã –º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.
    6. –ï—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ 21 - –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.
    7. –î–∏–ª–µ—Ä –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—ã, –ø–æ–∫–∞ —É –Ω–µ–≥–æ –º–µ–Ω—å—à–µ 17 –æ—á–∫–æ–≤.
    8. Blackjack - 21 –æ—á–∫–æ —Å –¥–≤—É–º—è –∫–∞—Ä—Ç–∞–º–∏ (–¢—É–∑ + 10/–í/–î/–ö).
    """
    bot.send_message(message.chat.id, rules)


@bot.message_handler(func=lambda message: message.text == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É")
def handle_hit(message):
    hit(message)


@bot.message_handler(func=lambda message: message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è")
def handle_stand(message):
    stand(message)


@bot.message_handler(func=lambda message: True)
def handle_unknown(message):
    if game_in_progress.get(message.chat.id, False):
        bot.send_message(message.chat.id, "–ò–≥—Ä–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ '–í–∑—è—Ç—å –∫–∞—Ä—Ç—É' –∏–ª–∏ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è'.")
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.")


bot.polling()